{
	"info": {
		"_postman_id": "b6a27cf3-b232-4ffc-b253-f84865d7e6a7",
		"name": "Postman: The complete guide - write a test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "FirstAPItest",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6c70a33c-8362-48cc-8451-862d3199eb50",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "example.com",
					"host": [
						"example",
						"com"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create the Trello Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "690ddc81-a6f0-40c2-aee5-9355d371fa25",
						"exec": [
							"//status code",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"//json Data",
							"pm.test(\"Board shoud be created\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"my new board using API\");",
							"    pm.globals.set(\"boardId\", jsonData.id);",
							"    ",
							"});",
							"//Nested JsonData",
							"pm.test(\"Board shoud be private\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.prefs.permissionLevel).to.eql(\"private\");",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/?key={{TrelloKey}}&token={{TrelloToken}}&name=my new board using API&defaultLists=false",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "key",
							"value": "{{TrelloKey}}"
						},
						{
							"key": "token",
							"value": "{{TrelloToken}}"
						},
						{
							"key": "name",
							"value": "my new board using API"
						},
						{
							"key": "defaultLists",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update the Trello Board",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://api.trello.com/1/boards/:id?name=Updating using API&token=36c02b7da10b00a98a1151710008b7ad35493bef4eb1df1774e72d4db4944dcc&key=3d9862553db16353c7db1e4682093b4a",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "name",
							"value": "Updating using API"
						},
						{
							"key": "token",
							"value": "36c02b7da10b00a98a1151710008b7ad35493bef4eb1df1774e72d4db4944dcc"
						},
						{
							"key": "key",
							"value": "3d9862553db16353c7db1e4682093b4a"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "5f4a03c396914727814c5fe8"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create TODO List in Trello Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "976d1e98-6d3a-4ee3-8fd3-dbf12e71be20",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"List name is TODO\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"TODO\");",
							"    pm.globals.set(\"TODOListID\", jsonData.id);",
							"});",
							"",
							"pm.test(\"List should not be closed\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.closed).to.eql(false);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/lists?key={{TrelloKey}}&token={{TrelloToken}}&name=TODO&idBoard={{boardId}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{TrelloKey}}"
						},
						{
							"key": "token",
							"value": "{{TrelloToken}}"
						},
						{
							"key": "name",
							"value": "TODO"
						},
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create DONE List in Trello Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e1fa6038-fcb1-4563-ad50-4a5a36b07dd3",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"List name is DONE\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"DONE\");",
							"    pm.globals.set(\"DONEListID\", jsonData.id);",
							"});",
							"pm.test(\"List should not be closed\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.closed).to.eql(false);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/lists?key={{TrelloKey}}&token={{TrelloToken}}&name=DONE&idBoard={{boardId}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{TrelloKey}}"
						},
						{
							"key": "token",
							"value": "{{TrelloToken}}"
						},
						{
							"key": "name",
							"value": "DONE"
						},
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create card in TODO List",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fcb2d1a9-7fc0-423b-827d-b60d15bf8cfe",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"card name is Learn Postman\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"Learn Postman\");",
							"    pm.globals.set(\"cardID\", jsonData.id);",
							"});",
							"pm.test(\"List should not be closed\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.closed).to.eql(false);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards?key={{TrelloKey}}&token={{TrelloToken}}&name=Learn Postman&idList={{TODOListID}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{TrelloKey}}"
						},
						{
							"key": "token",
							"value": "{{TrelloToken}}"
						},
						{
							"key": "name",
							"value": "Learn Postman"
						},
						{
							"key": "idList",
							"value": "{{TODOListID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Update card in TODO List to DONE List",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "68eeb0c1-b5a2-4c4e-81b8-d8a2260515c6",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"card name is Learn Postman\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"Learn Postman\");",
							"",
							"});",
							"pm.test(\"List should not be closed\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.closed).to.eql(false);",
							"});",
							"pm.test(\"List should be updated DONE List\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.idList).to.eql(pm.globals.get(\"DONEListID\"));",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/cards/:id?key={{TrelloKey}}&token={{TrelloToken}}&idList={{DONEListID}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"cards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{TrelloKey}}"
						},
						{
							"key": "token",
							"value": "{{TrelloToken}}"
						},
						{
							"key": "idList",
							"value": "{{DONEListID}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{cardID}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete the Trello Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5e420b61-4093-443b-b4d6-f8682e3f6354",
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/:id?key={{TrelloKey}}&token={{TrelloToken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{TrelloKey}}"
						},
						{
							"key": "token",
							"value": "{{TrelloToken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{boardId}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}